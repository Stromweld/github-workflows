---
on:
  workflow_call:

jobs:
  packer-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Packer FMT
        run: if packer fmt -check -recursive .; then exit 0; else echo "Some packer files need to be formatted, run 'packer fmt -recursive .' to fix"; exit 1; fi

  enumerate_pkrvars_validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Enumerate pkrvars validation
        shell: pwsh
        run: "'::set-output name=matrix::{0}' -f $(Get-ChildItem -Path ./ -Include *.pkrvars.hcl -Recurse | Foreach-Object {Join-Path -Path $_.Directory.Name -ChildPath $_.Name} | ConvertTo-Json -Compress)"
        id: enumerate_pkrvars_validation
    outputs:
      matrix: ${{ steps.enumerate_pkrvars_validation.outputs.matrix }}

  packer-validate:
    needs: enumerate_pkrvars_validation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkrvars: ${{ fromJson(needs.enumerate_pkrvars_validation.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Packer Init
        env:
          PACKER_GITHUB_API_TOKEN: "${{ secrets.PACKER_GITHUB_API_TOKEN }}"
        run: packer init -upgrade packer_templates
      - name: Packer Validate
        run: packer validate -var-file=os_pkrvars/"${{ matrix.pkrvars }}" packer_templates
